Description: Corrected support for buttons backgrounds with transparency
 Added 'no background' if there is only one button and backgrounds no more
 overlap if transparency used.
 Remove also the left clickable dead zone area on the corner when window is
 maximized
Origin: Ubuntu
Bug: https://bugzilla.gnome.org/show_bug.cgi?id=608511
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/metacity/+bug/535088
Author: Nicolas Desfontaine <noop@free.fr>

Index: mutter-2.91.2/src/ui/theme.c
===================================================================
--- mutter-2.91.2.orig/src/ui/theme.c	2010-11-09 02:25:19.000000000 +1100
+++ mutter-2.91.2/src/ui/theme.c	2010-11-26 11:27:45.892551000 +1100
@@ -702,8 +702,14 @@
 
   for (i = 0; i < n_left; i++)
     {
-      if (i == 0) /* prefer left background if only one button */
-        left_bg_rects[i] = &fgeom->left_left_background;
+      if (i == 0) /* For the first button (From left to right) */
+        {
+          if (n_left > 1) /* Set left_left_background
+                             if we have more than one button */
+            left_bg_rects[i] = &fgeom->left_left_background;
+          else /* No background if we have only one single button */
+            left_bg_rects[i] = &fgeom->left_single_background;
+        }
       else if (i == (n_left - 1))
         left_bg_rects[i] = &fgeom->left_right_background;
       else
@@ -712,15 +718,20 @@
 
   for (i = 0; i < n_right; i++)
     {
-      /* prefer right background if only one button */
-      if (i == (n_right - 1))
-        right_bg_rects[i] = &fgeom->right_right_background;
+      if (i == (n_right - 1)) /* For the first button (From right to left) */
+        {
+          if (n_right > 1) /* Set right_right_background
+                              if we have more than one button */
+            right_bg_rects[i] = &fgeom->right_right_background;
+          else /* No background if we have only one single button */
+            right_bg_rects[i] = &fgeom->right_single_background;
+        }
       else if (i == 0)
         right_bg_rects[i] = &fgeom->right_left_background;
       else
         right_bg_rects[i] = &fgeom->right_middle_backgrounds[i - 1];
     }
-  
+
   /* Be sure buttons fit */
   while (n_left > 0 || n_right > 0)
     {
@@ -836,9 +847,9 @@
       if (flags & META_FRAME_MAXIMIZED)
         {
           rect->clickable.x = rect->visible.x;
-          rect->clickable.y = 0;
-          rect->clickable.width = rect->visible.width;
-          rect->clickable.height = button_height + button_y;
+          rect->clickable.y = rect->visible.y;
+          rect->clickable.width = button_width;
+          rect->clickable.height = button_height;
 
           if (i == n_right - 1)
             rect->clickable.width += layout->right_titlebar_edge + layout->right_width + layout->button_border.right;
@@ -874,23 +885,13 @@
 
       if (flags & META_FRAME_MAXIMIZED)
         {
-          if (i==0)
-            {
-              rect->clickable.x = 0;
-              rect->clickable.width = button_width + x;
-            }
-          else
-            {
-              rect->clickable.x = rect->visible.x;
-              rect->clickable.width = button_width;
-            }
-
-            rect->clickable.y = 0;
-            rect->clickable.height = button_height + button_y;
-          }
-        else
-          g_memmove (&(rect->clickable), &(rect->visible), sizeof(rect->clickable));
-
+          rect->clickable.x = rect->visible.x;
+          rect->clickable.y = rect->visible.y;
+          rect->clickable.width = button_width;
+          rect->clickable.height = button_height;
+        }
+      else
+        g_memmove (&(rect->clickable), &(rect->visible), sizeof(rect->clickable));
 
       x = rect->visible.x + rect->visible.width + layout->button_border.right;
       if (left_buttons_has_spacer[i])
@@ -4571,7 +4572,7 @@
               /* MIDDLE_BACKGROUND type may get drawn more than once */
               if ((j == META_BUTTON_TYPE_RIGHT_MIDDLE_BACKGROUND ||
                    j == META_BUTTON_TYPE_LEFT_MIDDLE_BACKGROUND) &&
-                  middle_bg_offset < MAX_MIDDLE_BACKGROUNDS)
+                  (middle_bg_offset < (MAX_MIDDLE_BACKGROUNDS - 1)))
                 {
                   ++middle_bg_offset;
                 }
Index: mutter-2.91.2/src/ui/theme-private.h
===================================================================
--- mutter-2.91.2.orig/src/ui/theme-private.h	2010-11-26 11:28:32.502551001 +1100
+++ mutter-2.91.2/src/ui/theme-private.h	2010-11-26 11:28:48.732551001 +1100
@@ -249,9 +249,11 @@
   MetaButtonSpace unstick_rect;
 
 #define MAX_MIDDLE_BACKGROUNDS (MAX_BUTTONS_PER_CORNER - 2)
+  GdkRectangle left_single_background;
   GdkRectangle left_left_background;
   GdkRectangle left_middle_backgrounds[MAX_MIDDLE_BACKGROUNDS];
   GdkRectangle left_right_background;
+  GdkRectangle right_single_background;
   GdkRectangle right_left_background;
   GdkRectangle right_middle_backgrounds[MAX_MIDDLE_BACKGROUNDS];
   GdkRectangle right_right_background;
