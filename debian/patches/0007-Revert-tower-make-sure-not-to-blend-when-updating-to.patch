From 259c7be9065101ffa6b7c9d15094b5e4e5de02e6 Mon Sep 17 00:00:00 2001
From: Rico Tzschichholz <ricotz@ubuntu.com>
Date: Tue, 3 Sep 2013 08:35:38 +0200
Subject: [PATCH 7/8] Revert "tower: make sure not to blend when updating
 tower"

This reverts commit 2b940f6ababcfa7c02616574bc8a5203e582e86d.
---
 src/compositor/meta-texture-tower.c | 49 ++++++++++++-------------------------
 1 file changed, 16 insertions(+), 33 deletions(-)

diff --git a/src/compositor/meta-texture-tower.c b/src/compositor/meta-texture-tower.c
index fd28983..6c2b900 100644
--- a/src/compositor/meta-texture-tower.c
+++ b/src/compositor/meta-texture-tower.c
@@ -62,7 +62,6 @@ struct _MetaTextureTower
   CoglTexture *textures[MAX_TEXTURE_LEVELS];
   CoglOffscreen *fbos[MAX_TEXTURE_LEVELS];
   Box invalid[MAX_TEXTURE_LEVELS];
-  CoglPipeline *pipeline_template;
 };
 
 /**
@@ -94,9 +93,6 @@ meta_texture_tower_free (MetaTextureTower *tower)
 {
   g_return_if_fail (tower != NULL);
 
-  if (tower->pipeline_template != NULL)
-    cogl_object_unref (tower->pipeline_template);
-
   meta_texture_tower_set_base_texture (tower, NULL);
 
   g_slice_free (MetaTextureTower, tower);
@@ -398,43 +394,30 @@ texture_tower_revalidate_fbo (MetaTextureTower *tower,
   int dest_texture_width = cogl_texture_get_width (dest_texture);
   int dest_texture_height = cogl_texture_get_height (dest_texture);
   Box *invalid = &tower->invalid[level];
-  CoglFramebuffer *fb;
-  CoglError *catch_error = NULL;
-  CoglPipeline *pipeline;
+  CoglMatrix modelview;
 
   if (tower->fbos[level] == NULL)
-    tower->fbos[level] = cogl_offscreen_new_with_texture (dest_texture);
-
-  fb = COGL_FRAMEBUFFER (tower->fbos[level]);
+    tower->fbos[level] = cogl_offscreen_new_to_texture (dest_texture);
 
-  if (!cogl_framebuffer_allocate (fb, &catch_error))
-    {
-      cogl_error_free (catch_error);
-      return FALSE;
-    }
+  if (tower->fbos[level] == NULL)
+    return FALSE;
 
-  cogl_framebuffer_orthographic (fb, 0, 0, dest_texture_width, dest_texture_height, -1., 1.);
+  cogl_push_framebuffer (COGL_FRAMEBUFFER (tower->fbos[level]));
 
-  if (!tower->pipeline_template)
-    {
-      CoglContext *ctx =
-        clutter_backend_get_cogl_context (clutter_get_default_backend ());
-      tower->pipeline_template = cogl_pipeline_new (ctx);
-      cogl_pipeline_set_blend (tower->pipeline_template, "RGBA = ADD (SRC_COLOR, 0)", NULL);
-    }
+  cogl_ortho (0, dest_texture_width, dest_texture_height, 0, -1., 1.);
 
-  pipeline = cogl_pipeline_copy (tower->pipeline_template);
-  cogl_pipeline_set_layer_texture (pipeline, 0, tower->textures[level - 1]);
+  cogl_matrix_init_identity (&modelview);
+  cogl_set_modelview_matrix (&modelview);
 
-  cogl_framebuffer_draw_textured_rectangle (fb, pipeline,
-                                            invalid->x1, invalid->y1,
-                                            invalid->x2, invalid->y2,
-                                            (2. * invalid->x1) / source_texture_width,
-                                            (2. * invalid->y1) / source_texture_height,
-                                            (2. * invalid->x2) / source_texture_width,
-                                            (2. * invalid->y2) / source_texture_height);
+  cogl_set_source_texture (tower->textures[level - 1]);
+  cogl_rectangle_with_texture_coords (invalid->x1, invalid->y1,
+                                      invalid->x2, invalid->y2,
+                                      (2. * invalid->x1) / source_texture_width,
+                                      (2. * invalid->y1) / source_texture_height,
+                                      (2. * invalid->x2) / source_texture_width,
+                                      (2. * invalid->y2) / source_texture_height);
 
-  cogl_object_unref (pipeline);
+  cogl_pop_framebuffer ();
 }
 
 static void
-- 
1.8.3.2

